plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = property("mod.version") + "+" + stonecutter.current.version
group = property("mod.maven_group")

base {
	archivesName = property("mod.archives_name")
}

repositories {

}

dependencies {
	minecraft "com.mojang:minecraft:${stonecutter.current.version}"
	mappings "net.fabricmc:yarn:${property("mod.yarn_version")}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property("dependencies.fabric_loader_version")}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${property("dependencies.fabric_api_version")}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"mc_target": project.property("mod.mc_target_version")
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

if (stonecutter.current.isActive) { // run configs for non-active version would be invalid
	loom {
		runConfigs.all {
			ideConfigGenerated = true // generate IDE tasks for running client, server and testmod, datagen if those are present
			runDir "../../run" // use a global run directory for all versions
		}
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}